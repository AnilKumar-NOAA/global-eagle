# This is a basic workflow that is manually triggered

name: Nested Eagle Pipeline

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called submit_grids.
  Submit_Grids:
    # The type of runner that the job will run on
    runs-on: ursa
    timeout-minutes: 1440

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#    - name: Checkout a specific branch
#      uses: actions/checkout@v4 
#      with:
#        ref: kb-pipeline
    - name: Submit Initial Grids
      run: |
         cd nested_eagle/scientific_workflow/data
         echo "Slurm job to generate the grids has completed."
#
#        JOB_ID=$(sbatch submit_grids.sh | awk '{print $4}')
#            echo "Submitted Slurm job with ID: $JOB_ID"
#            
#            while squeue -j $JOB_ID &>/dev/null; do
#              echo "Slurm job $JOB_ID is still running or pending. Waiting..."
#              sleep 30 # Wait for 30 seconds before checking again
#            done
            
#          echo "Slurm job $JOB_ID to generate the grids has completed."
  Generate_Forecasts:
    # The type of runner that the job will run on
    runs-on: ursa
    timeout-minutes: 1440
    needs: Submit_Grids
    steps:
      - name: Generate GFS & HRRR Forecasts
        run: |
         cd nested_eagle/scientific_workflow/data
         echo "Slurm jobs to generate the GFS & HRRR forecasts have completed."
#         
#         JOB_ID1=$(sbatch submit_gfs.sh | awk '{print $4}')
#         JOB_ID2=$(sbatch submit_hrrr.sh | awk '{print $4}')
#         
#            echo "Submitted Slurm job with ID: $JOB_ID1"
#            echo "Submitted Slurm job with ID: $JOB_ID2"
#            while squeue -h -j ${JOB_ID1},${JOB_ID2} | grep -q "${JOB_ID1}\|${JOB_ID2}"; do
#               squeue -u $USER
#               sleep 30  # Wait for 30 seconds before checking again.
#            done
#            
#            echo "Slurm jobs $JOB_ID1 and $JOB_ID2 to generate the GFS & HRRR forecasts have completed."
  Run_Training:
    # The type of runner that the job will run on
    runs-on: ursa
    timeout-minutes: 1440
    needs: Generate_Forecasts
    steps:
      - name: Run Training Against the Generated Forecasts
        run: |
         cd nested_eagle/scientific_workflow/training

         JOB_ID=$(sbatch submit_training.sh | awk '{print $4}')
         CHECKPOINT="outputs/checkpoint"

         echo "Submitted Slurm job with ID: $JOB_ID"
          while [ ! -d "$CHECKPOINT" ]; do
            echo "Directory '$CHECKPOINT' doesn't exist yet."
            pwd
            squeue -u $USER
          done
            scancel $JOB_ID
            echo "Slurm job $JOB_ID to train the data has been completed."

         
         

    
          
